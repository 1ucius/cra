{"version":3,"sources":["img/icons/play.svg","img/icons/pause.svg","img/icons/volume.svg","logo.svg","components/functional/loader.jsx","components/functional/AppHeaderView.jsx","components/functional/AllPodcastsView.jsx","components/functional/RecentPodcastsView.jsx","components/functional/PodcastView.jsx","components/helpers.js","redux/actions/actions.js","components/containers/Podcast.jsx","components/containers/Slider.jsx","components/functional/PlayerView.jsx","components/containers/Player.jsx","components/containers/AppWrapper.jsx","App.js","sw_register.js","redux/reducers/podcasts-reducer.js","redux/reducers/player-reducer.js","redux/reducers/all-reducers.js","redux/store.js","index.js"],"names":["module","exports","__webpack_require__","p","LoaderView","react_default","a","createElement","className","AppHeader","React","memo","props","id","href","link","src","logo","alt","AllPodcasts","podcasts_array","RecentPodcasts","length","PodcastView","shown","Fragment","style","backgroundImage","concat","cover_image","title","publishing_date","timeToSec","prop","time","split","Number","ACTIONS","FETCH_PODCASTS_BEGIN","FETCH_PODCASTS_SUCCESS","FETCH_PODCASTS_FAILURE","UPDATE_PODCASTS","LOAD_MORE_PODCASTS","CHANGE_VOLUME","fetchPodcastsBegin","type","fetchPodcastsSuccess","podcasts","payload","fetchPodcastsFailure","error","setPodcastsState","state","fetchPodcasts","api_link","dispatch","fetch","then","res","text","xmlToJson","xml","obj","nodeType","attributes","j","attribute","item","nodeName","nodeValue","hasChildNodes","i","childNodes","push","old","DOMParser","parseFromString","rss","channel","map","podcast","index","description","duration","duration_in_sec","source","guid","wideImage","current_time","parsePodcastObject","arr","catch","updatePodcasts","getState","all","all_podcasts","recent","recent_podcasts","counter","cache_counter","new_state","active_podcast","duplicate","to_find","findDuplicate","old_index","new_index","k","undefined","splice","shiftArrayItem","unshift","Podcast","componentWillMount","_this","el","createRef","componentDidMount","loadImage","image","Image","addEventListener","setState","info","update","updateInfo","_this$props","this","active","onClick","ref","functional_PodcastView","Component","connect","Slider","value","progress","drag_size","direction","force_update","dragging","autohide","callback","slider_drag","slider_bar","slider_progress","recalculateOffsets","window","debounce","componentWillUnmount","removeEventListener","componentWillReceiveProps","current","slider_bar_left","getBoundingClientRect","left","slider_bar_width","width","updateProgress","e","additional_props","clientX","new_props","Object","keys","key","devider","allow_progress","pointerDown","pointerUp","cur","Math","round","sec_num","parseInt","floor","hours","minutes","seconds","secToTime","progress_bar_length","onPointerDown","height","PlayerView","playing","play_btn_callback","playIcon","pauseIcon","Slider_Slider","time_callback","volumeIcon","volume","volume_callback","Player","audio","Audio","progressUpdate","audioEnded","togglePlay","play","pause","updated","assign","currentTime","updateAudio","recieveTimeFromSlider","recieveVolumeFromSlider","changeVolume","functional_PlayerView","player","AppWrapper","loadMore","innerHeight","scrollY","document","body","scrollHeight","podcasts_amount","amount_to_display","loadMorePodcasts","amount_to_display_increment","createPodcastsToRender","amount","slice","is_active","containers_Podcast","loader","loading","functional_loader","AppHeaderView","RecentPodcastsView","AllPodcastsView","containers_Player","new_count","App","containers_AppWrapper","Boolean","location","hostname","match","initialState","allReducers","combineReducers","arguments","_ref","objectSpread","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","App_App","getElementById"],"mappings":"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","file":"static/js/main.2ccaa6cd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/play.5004d330.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause.07100aab.svg\";","module.exports = __webpack_public_path__ + \"static/media/volume.69de45ca.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.02d30e17.svg\";","import React from 'react';\r\n\r\nconst LoaderView = () => {\r\n    return (\r\n        <div className=\"loader__wrapper\">\r\n            <div className=\"sk-folding-cube\">\r\n                <div className=\"sk-cube1 sk-cube\"></div>\r\n                <div className=\"sk-cube2 sk-cube\"></div>\r\n                <div className=\"sk-cube4 sk-cube\"></div>\r\n                <div className=\"sk-cube3 sk-cube\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default LoaderView;","import React from 'react';\r\n\r\nconst AppHeader = React.memo(props => {\r\n  return (\r\n    <div className=\"radio__header\">\r\n        <div className=\"container\">\r\n            <div className=\"logo\" id=\"logo\">\r\n                <a href={props.link} className=\"logo__link\">\r\n                    <img src={props.logo} className=\"logo__img\" alt=\"logo\"/>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n});\r\n\r\nexport default AppHeader;","import React from 'react';\r\n\r\nconst AllPodcasts = React.memo(props => {\r\n  return (\r\n    <div className=\"radio__all\">\r\n        <h2 className=\"radio__title alerta large-font\">Podcasts:</h2>\r\n        <div className=\"radio__wrap\">\r\n            {props.podcasts_array}\r\n        </div>\r\n    </div>\r\n  )\r\n});\r\n\r\nexport default AllPodcasts;","import React from 'react'\r\n\r\nconst RecentPodcasts = React.memo(props => {\r\n  if (!props.podcasts_array.length) {\r\n    return  <div className=\"radio__recent radio__recent_hidden\"></div>\r\n  }\r\n\r\n  return (\r\n    <div className=\"radio__recent\">\r\n        <h2 className=\"radio__title alerta large-font\">Recent Played:</h2>\r\n        <div className=\"radio__wrap radio__wrap_latest\">\r\n            {props.podcasts_array}\r\n        </div>\r\n    </div>\r\n  )\r\n});\r\n\r\nexport default RecentPodcasts;","import React from 'react';\r\n\r\nconst PodcastView = React.memo(props =>{\r\n    if (props.shown) {\r\n        return (\r\n            <>\r\n                <div \r\n                    className = \"podcast__cover\"\r\n                    style     = {{backgroundImage: `url(${props.cover_image})`}}\r\n                >\r\n                </div>\r\n                <div className=\"podcast__wrapper\">\r\n                    <div className=\"podcast__title\">\r\n                        <p>{props.title}</p>\r\n                        <p>{props.publishing_date}</p>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n});\r\n\r\nexport default PodcastView;","export function xmlToJson(xml) {\r\n    var obj = {};\r\n    if (xml.nodeType === 1) {\r\n        if (xml.attributes.length > 0) {\r\n        obj[\"@attributes\"] = {};\r\n            for (var j = 0; j < xml.attributes.length; j++) {\r\n                var attribute = xml.attributes.item(j);\r\n                obj[\"@attributes\"][attribute.nodeName] = attribute.nodeValue;\r\n            }\r\n        }\r\n    } else if (xml.nodeType === 3) {\r\n        obj = xml.nodeValue;\r\n    }\r\n    if (xml.hasChildNodes()) {\r\n        for(var i = 0; i < xml.childNodes.length; i++) {\r\n            var item = xml.childNodes.item(i);\r\n            var nodeName = item.nodeName;\r\n            if (typeof(obj[nodeName]) == \"undefined\") {\r\n                obj[nodeName] = xmlToJson(item);\r\n            } else {\r\n                if (typeof(obj[nodeName].push) == \"undefined\") {\r\n                    var old = obj[nodeName];\r\n                    obj[nodeName] = [];\r\n                    obj[nodeName].push(old);\r\n                }\r\n                obj[nodeName].push(xmlToJson(item));\r\n            }\r\n        }\r\n    }\r\n    return obj;\r\n}\r\n\r\nexport function timeToSec(prop) {\r\n    let time = prop.split(':'),\r\n        sec  = 0;\r\n    if (time.length > 2) {\r\n        sec = Number(time[0])*3600 + Number(time[1])*60 + Number(time[2]);\r\n    } else if (time.length === 2) {\r\n        sec = Number(time[0])*60 + Number(time[1]);\r\n    } else {\r\n        sec = Number(time[0]);\r\n    }\r\n    return sec;\r\n}\r\n\r\nexport function secToTime(prop) {\r\n    let sec_num = parseInt(Math.floor(prop), 10);\r\n    let hours   = Math.floor(sec_num / 3600);\r\n    let minutes = Math.floor((sec_num - (hours * 3600)) / 60);\r\n    let seconds = sec_num - (hours * 3600) - (minutes * 60);\r\n\r\n    if (hours   < 10) {hours   = \"0\"+hours;}\r\n    if (minutes < 10) {minutes = \"0\"+minutes;}\r\n    if (seconds < 10) {seconds = \"0\"+seconds;}\r\n    return `${hours}:${minutes}:${seconds}`;\r\n}\r\n\r\nexport function shiftArrayItem(arr, old_index, new_index) {\r\n    if (new_index >= arr.length) {\r\n        var k = new_index - arr.length + 1;\r\n        while (k--) {\r\n            arr.push(undefined);\r\n        }\r\n    }\r\n    arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\r\n}\r\n\r\nexport function checkElementVisibility(el) {\r\n    let rect       = el.getBoundingClientRect();\r\n    let elemTop    = rect.top;\r\n    let elemBottom = rect.bottom;\r\n    let isVisible  = (elemTop >= -.8*window.innerHeight) && (elemBottom <= 1.8*window.innerHeight);\r\n    return isVisible;\r\n}\r\n\r\nexport function parsePodcastObject(podcast) {\r\n    return {\r\n        index:              `${Number(podcast['itunes:season']['#text'])}${Number(podcast['itunes:episode']['#text'])}${timeToSec(podcast['itunes:duration']['#text'])}`,\r\n        title:              podcast.title['#text'].split(' - ')[0],\r\n        publishing_date:    podcast.title['#text'].split(' - ')[1],\r\n        description:        podcast.description['#text'],\r\n        duration:           podcast['itunes:duration']['#text'],\r\n        duration_in_sec:    timeToSec(podcast['itunes:duration']['#text']),\r\n        source:             podcast.guid['#text'],\r\n        cover_image:        podcast.wideImage['#text'],\r\n        current_time:       0\r\n    }\r\n}\r\n\r\nexport function findDuplicate(arr, to_find) {\r\n    let duplicate = -1;\r\n    arr.map((item, i) => {\r\n        if (item.index === to_find.index) {\r\n            duplicate = i;\r\n        }\r\n    });\r\n    return duplicate;\r\n}","import {xmlToJson, parsePodcastObject, shiftArrayItem, findDuplicate} from '../../components/helpers';\r\n\r\nexport const ACTIONS = {\r\n    FETCH_PODCASTS_BEGIN:       'FETCH_PODCASTS_BEGIN',\r\n    FETCH_PODCASTS_SUCCESS:     'FETCH_PODCASTS_SUCCESS',\r\n    FETCH_PODCASTS_FAILURE:     'FETCH_PODCASTS_FAILURE',\r\n    UPDATE_PODCASTS:            'UPDATE_PODCASTS',\r\n    LOAD_MORE_PODCASTS:         'LOAD_MORE_PODCASTS',\r\n    CHANGE_VOLUME:              'CHANGE_VOLUME'\r\n}\r\n\r\nexport const fetchPodcastsBegin = () => ({\r\n  type: ACTIONS.FETCH_PODCASTS_BEGIN\r\n});\r\n\r\nexport const fetchPodcastsSuccess = podcasts => ({\r\n  type: ACTIONS.FETCH_PODCASTS_SUCCESS,\r\n  payload: podcasts\r\n});\r\n\r\nexport const fetchPodcastsFailure = error => ({\r\n  type: ACTIONS.FETCH_PODCASTS_FAILURE,\r\n  payload: error\r\n});\r\n\r\nexport const setPodcastsState = state => ({\r\n    type: ACTIONS.UPDATE_PODCASTS,\r\n    payload: state\r\n});\r\n\r\nexport const loadMorePodcasts = new_count => ({\r\n    type: ACTIONS.LOAD_MORE_PODCASTS,\r\n    payload: new_count\r\n});\r\n\r\nexport const changeVolume = volume => ({\r\n    type: ACTIONS.CHANGE_VOLUME,\r\n    payload: volume\r\n});\r\n\r\nexport function fetchPodcasts(api_link) {\r\n    return dispatch => {\r\n        dispatch(fetchPodcastsBegin());\r\n        return fetch(api_link)\r\n            .then(res => res.text())\r\n            .then(text => {\r\n                let arr = xmlToJson(new DOMParser().parseFromString(text, \"text/xml\")).rss.channel.item\r\n                            .map((podcast, index) => parsePodcastObject(podcast, index));\r\n                return arr;\r\n            })\r\n            .then(arr => dispatch(fetchPodcastsSuccess(arr)))\r\n            .catch(error => dispatch(fetchPodcastsFailure(error)));\r\n    };\r\n}\r\n\r\nexport function updatePodcasts(podcast) {\r\n    return (dispatch, getState) => {\r\n        let state     = getState().podcasts;\r\n        let all       = state.all_podcasts;\r\n        let recent    = state.recent_podcasts;\r\n        let counter   = state.cache_counter;\r\n        let new_state = {\r\n            active_podcast: podcast\r\n        };\r\n\r\n        all.map((p, i) => {\r\n            if (p.index === podcast.index) {\r\n                all[i] = podcast;\r\n            }\r\n        });\r\n\r\n        new_state.all_podcasts = all;\r\n\r\n        let duplicate = findDuplicate(recent, podcast);\r\n        if (duplicate > -1) {\r\n            shiftArrayItem(recent, duplicate, 0);\r\n            recent[0] = podcast;\r\n        } else {\r\n            recent.unshift(podcast);\r\n        }\r\n        if (recent.length > counter) recent = recent.splice(0, counter);\r\n\r\n        new_state.recent_podcasts = recent;\r\n\r\n        dispatch(setPodcastsState(new_state));\r\n    }\r\n}","import React, { Component }     from 'react';\r\n\r\nimport PodcastView              from '../functional/PodcastView'\r\nimport {connect}                from 'react-redux';\r\nimport {updatePodcasts}   from '../../redux/actions/actions';\r\n\r\n\r\nclass Podcast extends Component {\r\n\tstate = {\r\n\t\tshown: false\r\n\t}\r\n\r\n\r\n\tcomponentWillMount = () => {\r\n\t\tthis.el = React.createRef();\r\n\t}\r\n\r\n\r\n\tcomponentDidMount = () => {\r\n\t\tthis.loadImage();\r\n\t}\r\n\r\n\r\n\tloadImage = () => {\r\n\t\tthis.image     = new Image();\r\n\t\tthis.image.addEventListener('load', () => {\r\n\t\t\tdelete this.image;\r\n\t\t\tthis.setState({shown: true});\r\n\t\t});\r\n\t\tthis.image.src = this.props.info.cover_image;\r\n\t}\r\n\r\n\r\n\tupdate = () => {\r\n\t\tthis.props.updateInfo(this.props.info);\r\n\t}\r\n\r\n\r\n    render() {\r\n\t\tconst {info, active} = this.props;\r\n\r\n        return (\r\n\t\t\t<div \r\n\t\t\t\tclassName = {`podcast roboto ${this.state.shown ? 'podcast_shown' : ''} ${active ? 'podcast_active' : ''}`}\r\n\t\t\t\tonClick   = {this.update}\r\n\t\t\t\tref       = {this.el}\r\n\t\t\t>\r\n\t\t\t\t<PodcastView \r\n\t\t\t\t\tshown           = {this.state.shown}\r\n\t\t\t\t\tactive          = {active}\r\n\t\t\t\t\tcover_image     = {info.cover_image}\r\n\t\t\t\t\ttitle           = {info.title}\r\n\t\t\t\t\tpublishing_date = {info.publishing_date}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n\tstate => ({\r\n\t\tstate: state.podcasts.active_podcast\r\n\t}),\r\n\tdispatch => ({\r\n\t\tupdateInfo: info => {\r\n\t\t\tdispatch(updatePodcasts(info));\r\n\t\t}\r\n\t})\r\n)(Podcast);","import React, { Component } from 'react';\r\nimport     {secToTime}      from '../helpers';\r\nimport     {debounce}       from 'lodash';\r\n\r\n\r\nexport default class Slider extends Component {\r\n    state = {\r\n        type:             this.props.type,\r\n        duration:         this.props.duration,\r\n        value:            this.props.value,\r\n        progress:         this.props.progress,\r\n        drag_size:        this.props.drag_size,\r\n        direction:        this.props.direction,\r\n        force_update:     this.props.force_update,\r\n        dragging:         false,\r\n        autohide:         this.props.autohide\r\n    };\r\n\r\n\r\n    componentWillMount = () => {\r\n        this.callback           = this.props.callback;\r\n        this.slider_drag        = React.createRef();\r\n        this.slider_bar         = React.createRef();\r\n        this.slider_progress    = React.createRef();\r\n    }\r\n\r\n    \r\n    componentDidMount = () => {\r\n        this.recalculateOffsets();\r\n        window.addEventListener('resize', debounce(this.recalculateOffsets, 400));\r\n    }\r\n\r\n\r\n    componentWillUnmount = () => {\r\n        window.removeEventListener('resize', debounce(this.recalculateOffsets, 400));\r\n    }\r\n\r\n\r\n    componentWillReceiveProps = props => {\r\n        if (props !== this.props && this.state.dragging === false) {\r\n            this.setState(props);\r\n        }\r\n    }\r\n\r\n\r\n    recalculateOffsets = () => {\r\n        if (this.slider_bar.current != null) {\r\n            this.slider_bar_left  = this.slider_bar.current.getBoundingClientRect().left;\r\n            this.slider_bar_width = this.slider_bar.current.getBoundingClientRect().width;\r\n        }\r\n    };\r\n\r\n\r\n    updateProgress = (e, additional_props) => {\r\n        let left     = e.clientX;\r\n        let progress = this.state.value*((left - this.slider_bar_left)/this.slider_bar_width);\r\n\r\n        progress = progress > this.state.value ? this.state.value : progress < 0 ? 0 : progress;\r\n\r\n        let new_props = {\r\n            progress: progress\r\n        }\r\n\r\n        if (additional_props !== undefined) {\r\n            Object.keys(additional_props).map(key => {\r\n               new_props[key] = additional_props[key];\r\n            });\r\n        }\r\n\r\n        this.setState(new_props, \r\n            () => {\r\n                if (this.state.dragging === false || this.state.force_update) {\r\n                    let devider = this.state.type === 'volume' ? 100 : 1;\r\n                    this.callback(progress/devider);\r\n                    this.allow_progress = false;\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    pointerDown = () => {\r\n        this.setState({\r\n                        dragging: true\r\n                      }, () => this.allow_progress = true);\r\n        window.addEventListener('pointermove', this.updateProgress);\r\n        window.addEventListener('pointerup', this.pointerUp);\r\n    }\r\n\r\n\r\n    pointerUp = e => {\r\n        window.removeEventListener('pointermove', this.updateProgress);\r\n        window.removeEventListener('pointerup', this.pointerUp);\r\n        this.updateProgress(e, {dragging: false});\r\n    }\r\n\r\n    \r\n    render() {\r\n\r\n        let cur = this.state.type === 'volume' ? Math.round(this.state.progress) : secToTime(this.state.progress);\r\n        let progress_bar_length  = `${this.state.progress/this.state.value*100}%`;\r\n\r\n\r\n        return (\r\n            <div className={`slider ${this.state.dragging ? 'slider_dragging' : ''} ${this.state.autohide ? 'slider_autohide' : ''}`}>\r\n                <span \r\n                    className = \"slider__bar\" \r\n                    ref       = {this.slider_bar} \r\n                    onClick   = {this.pointerUp}\r\n                >\r\n                    <span \r\n                        className = \"slider__cur\"\r\n                        ref       = {this.slider_progress}\r\n                        style     = {{width: progress_bar_length}}\r\n                    >\r\n                    </span>\r\n                    <span \r\n                        className     = \"slider__drag\" \r\n                        onPointerDown = {this.pointerDown}\r\n                        ref           = {this.slider_drag}\r\n                        style         = {{\r\n                                            left:   progress_bar_length, \r\n                                            width:  `${this.state.drag_size}px`, \r\n                                            height: `${this.state.drag_size}px`\r\n                                        }}\r\n                    >\r\n                    </span>\r\n                </span>\r\n                <div className=\"slider__range roboto xxsmall-font\">\r\n                    <span className=\"slider__range-cur\">{cur}</span>\r\n                    <span className=\"slider__range-length\">{this.state.duration}</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport \t     Slider         from '../containers/Slider';\r\nimport      playIcon        from \"../../img/icons/play.svg\";\r\nimport      pauseIcon       from \"../../img/icons/pause.svg\";\r\nimport      volumeIcon      from \"../../img/icons/volume.svg\";\r\n\r\nconst PlayerView = React.memo(props => {\r\n    return (\r\n        <div className={`radio__player-wrap${props.active ? ' radio__player-wrap_active' : ''}`}>\r\n            <div \r\n                className={`player${props.playing ? ' player_playing' : ''}`} \r\n                id=\"player\"\r\n            >\r\n                <div className=\"container\">\r\n                    <div className=\"player__wrap\">\r\n                        <div className=\"player__cover\">\r\n                            <img \r\n                                src={props.cover_image} \r\n                                alt=\"podcast cover\"\r\n                            />\r\n                            <h3 className=\"player__title roboto small-font\">\r\n                                <p>{props.title}</p>\r\n                                <p>{props.publishing_date}</p>\r\n                            </h3>\r\n                        </div>\r\n                        <div className=\"player__controls\">\r\n                            <div className=\"player__row player__row_center\">\r\n                                <span className=\"player__playback\" onClick={props.play_btn_callback}>\r\n                                    <img \r\n                                        className=\"player__icon player__icon_play\" \r\n                                        src={playIcon} \r\n                                        alt=\"play icon\"\r\n                                    />\r\n                                    <img \r\n                                        className=\"player__icon player__icon_pause\" \r\n                                        src={pauseIcon} \r\n                                        alt=\"pause icon\"\r\n                                    />\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"player__time\">\r\n                                <Slider \r\n                                    type           = 'time' //'time' or 'volume'\r\n                                    duration       = {props.podcast.duration}\r\n                                    value          = {props.podcast.duration_in_sec}\r\n                                    progress       = {props.podcast.current_time}\r\n                                    drag_size      = {10}\r\n                                    direction      = 'horizontal'\r\n                                    callback       = {props.time_callback}\r\n                                    force_update   = {false}\r\n                                    autohide       = {false}\r\n                                />\r\n                            </div>\r\n                            <div className=\"player__volume\">\r\n                                <img \r\n                                    src={volumeIcon} \r\n                                    className=\"player__icon player__icon_volume\" \r\n                                    alt=\"volume icon\"\r\n                                />\r\n                                <Slider \r\n                                    type           = 'volume' //'time' or 'volume'\r\n                                    duration       = {100}\r\n                                    value          = {100}\r\n                                    progress       = {props.volume*100 || 100}\r\n                                    drag_size      = {10}\r\n                                    direction      = 'horizontal'\r\n                                    callback        = {props.volume_callback}\r\n                                    force_update   = {true}\r\n                                    autohide       = {true}\r\n                                />\r\n                            </div>\r\n                        </div> \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\n\r\nexport default PlayerView;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {changeVolume, updatePodcasts} from '../../redux/actions/actions'\r\n\r\n\r\nimport PlayerView from '../functional/PlayerView';\r\n\r\n\r\nclass Player extends Component {\r\n\tstate = {\r\n\t\tplaying: false\r\n\t};\r\n\r\n\r\n\tcomponentWillMount = () => {\r\n\t\tthis.audio        = new Audio();\r\n\t\tthis.audio.volume = 1;\r\n\t\tthis.audio.addEventListener('timeupdate', this.progressUpdate);\r\n\t\tthis.audio.addEventListener('ended', this.audioEnded);\r\n\t}\r\n\t\r\n\taudioEnded = () => {\r\n\t\tthis.setState({\r\n\t\t\tplaying: false\r\n\t\t})\r\n\t}\r\n\r\n\r\n\ttogglePlay = () => {\r\n\t\tthis.setState({playing: !this.state.playing},\r\n\t\t\t() => {\r\n\t\t\t\tif (this.state.playing) {\r\n\t\t\t\t\tthis.audio.play();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.audio.pause();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\r\n\tprogressUpdate = () => {\r\n\t\tlet updated = Object.assign({}, this.props.podcast);\r\n\t\tupdated.current_time = this.audio.currentTime;\r\n\t\tthis.props.updateInfo(updated);\r\n\t}\r\n\r\n\r\n\tupdateAudio = () => {\r\n\t\tif (this.audio.src !== this.props.podcast.source) {\r\n\t\t\tthis.audio.src         = this.props.podcast.source;\r\n\t\t\tthis.audio.currentTime = this.props.podcast.current_time || 0;\r\n\t\t\tif (this.state.playing) {\r\n\t\t\t\tthis.audio.play();\r\n\t\t\t} else {\r\n\t\t\t\tthis.audio.pause();\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\r\n\trecieveTimeFromSlider = time => {\r\n\t\tthis.audio.currentTime = time;\r\n\t}\r\n\r\n\r\n\trecieveVolumeFromSlider = volume => {\r\n\t\tthis.audio.volume = volume;\r\n\t\tthis.props.changeVolume(volume);\r\n\t}\r\n\t\r\n\r\n\trender() {\r\n\t\tconst {volume, current_time, podcast} = this.props;\r\n\t\tthis.updateAudio();\r\n\t\r\n\t\treturn <PlayerView \r\n\t\t\tactive            = {Object.keys(podcast).length}\r\n\t\t\tpodcast           = {podcast}\r\n\t\t\tplaying           = {this.state.playing}\r\n\t\t\tcover_image       = {podcast.cover_image}\r\n\t\t\ttitle             = {podcast.title}\r\n\t\t\tpublishing_date   = {podcast.publishing_date}\r\n\t\t\tplay_btn_callback = {this.togglePlay}\r\n\t\t\ttime_callback     = {this.recieveTimeFromSlider}\r\n\t\t\tvolume_callback   = {this.recieveVolumeFromSlider}\r\n\t\t\tvolume            = {volume}\r\n\t\t/>\r\n\t}\r\n}\r\n\r\nexport default connect(\r\n\tstate => ({\r\n\t\tvolume:       state.player.volume,\r\n\t\tcurrent_time: state.player.current_time,\r\n\t\tpodcast:      state.podcasts.active_podcast\r\n\t}),\r\n\tdispatch => ({\r\n\t\tupdateInfo: info => {\r\n\t\t\tdispatch(updatePodcasts(info));\r\n\t\t},\r\n\t\tchangeVolume: volume => {\r\n\t\t\tdispatch(changeVolume(volume));\r\n\t\t}\r\n\t})\r\n)(Player); ","import React, { Component }              from 'react';\r\nimport {debounce}                        from 'lodash';\r\nimport LoaderView                        from '../functional/loader';\r\nimport AppHeader                         from '../functional/AppHeaderView';\r\nimport AllPodcasts                       from '../functional/AllPodcastsView';\r\nimport RecentPodcasts                    from '../functional/RecentPodcastsView';\r\nimport Podcast                           from './Podcast';\r\nimport Player                            from './Player';\r\nimport logo                              from '../../logo.svg';\r\nimport {connect}                         from 'react-redux';\r\nimport {fetchPodcasts, loadMorePodcasts} from '../../redux/actions/actions';\r\n\r\n\r\nclass AppWrapper extends Component {\r\n\r\n    componentDidMount = () => {\r\n        this.props.fetch(this.props.podcasts.api_link);\r\n        window.addEventListener('scroll', debounce(this.loadMore, 300));\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        window.removeEventListener('scroll', debounce(this.loadMore, 300));\r\n    }\r\n\r\n    loadMore = () => {\r\n        if (\r\n            (window.innerHeight + window.scrollY) >= document.body.scrollHeight - 100 &&\r\n            this.props.podcasts.podcasts_amount >= this.props.podcasts.amount_to_display\r\n        ) {\r\n            this.props.loadMorePodcasts(this.props.podcasts.amount_to_display + \r\n                                        this.props.podcasts.amount_to_display_increment);\r\n        }\r\n    }\r\n\r\n    createPodcastsToRender = (arr, amount) => {\r\n        let podcasts_to_render = amount ? arr.slice(0, amount) : arr;\r\n        return podcasts_to_render.map(podcast => {\r\n            let is_active = podcast === this.props.podcasts.active_podcast ? true : false;\r\n            return <Podcast\r\n                        key    = {podcast.index}\r\n                        info   = {podcast}\r\n                        active = {is_active}\r\n                    />\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {podcasts} = this.props;\r\n        let loader = '';\r\n\r\n        if (podcasts.loading) {\r\n            loader = <LoaderView />\r\n        }\r\n\r\n        return (\r\n            <div className=\"radio\" id=\"radio\">\r\n                {loader}\r\n                <AppHeader \r\n                    link = '#1'\r\n                    logo = {logo}\r\n                />\r\n                <RecentPodcasts\r\n                    podcasts_array = {this.createPodcastsToRender(podcasts.recent_podcasts)} \r\n                />\r\n                <AllPodcasts \r\n                    podcasts_array = {this.createPodcastsToRender(podcasts.all_podcasts, podcasts.amount_to_display)} \r\n                />\r\n                <Player/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        podcasts: state.podcasts\r\n    }),\r\n    dispatch => ({\r\n        fetch: link => {\r\n            dispatch(fetchPodcasts(link));\r\n        },\r\n        loadMorePodcasts: new_count => {\r\n            dispatch(loadMorePodcasts(new_count));\r\n        }\r\n    })\r\n)(AppWrapper);","import React, { Component } from 'react';\nimport      AppWrapper      from './components/containers/AppWrapper';\nimport './App.sass'\n\n\nexport default class App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<AppWrapper/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}","const isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    window.location.hostname === '[::1]' ||\r\n    window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register() {\r\n    // console.log(process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator);\r\n    // if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        console.log(publicUrl);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/sw_cache.js`;\r\n\r\n            if (isLocalhost) {\r\n                registerValidSW(swUrl);\r\n            } else {\r\n                registerSW(swUrl);\r\n            }\r\n\r\n        });\r\n    // };\r\n}\r\n\r\nfunction registerSW(swUrl) {\r\n    navigator.serviceWorker.register(swUrl)\r\n        .then(reg => {\r\n            console.log('Hooray. Registration successful, scope is:', reg);\r\n        }).catch(err => {\r\n            console.log('Whoops. Service worker registration failed, error:', err);\r\n        });\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                registration.unregister().then(() => {\r\n                    window.location.reload();\r\n                });\r\n                });\r\n            } else {\r\n                registerSW(swUrl);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}","import {ACTIONS} from '../actions/actions';\r\n\r\nconst initialState = {\r\n    api_link: 'https://tools.planetradio.co.uk/core/podcasts/rss.php?name=radio-1-norge',\r\n    all_podcasts: [],\r\n\tactive_podcast: {},\r\n\trecent_podcasts: [],\r\n\tloading:  false,\r\n\terror:    null,\r\n\tpodcasts_amount: null,\r\n    amount_to_display: 12,\r\n\tamount_to_display_increment: 12,\r\n\tcache_counter: 5\r\n}\r\n\r\nexport default function podcastsReducer(\r\n\tstate = initialState,\r\n\t{type, payload}\r\n) {\r\n\tswitch (type) {\r\n\t\tcase ACTIONS.FETCH_PODCASTS_BEGIN:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true,\r\n\t\t\t\terror:   null\r\n\t\t\t}\r\n\t\tcase ACTIONS.FETCH_PODCASTS_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tall_podcasts: payload,\r\n\t\t\t\tpodcasts_amount: payload.length,\r\n\t\t\t\tloading:      false,\r\n\t\t\t\terror:        null\r\n\t\t\t}\r\n\t\tcase ACTIONS.FETCH_PODCASTS_FAILURE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror:   payload\r\n            }\r\n        case ACTIONS.LOAD_MORE_PODCASTS:\r\n            return {\r\n                ...state,\r\n                amount_to_display: payload\r\n\t\t\t}\r\n\t\tcase ACTIONS.UPDATE_PODCASTS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tactive_podcast: payload.active_podcast,\r\n\t\t\t\tall_podcasts: payload.all_podcasts,\r\n\t\t\t\trecent_podcasts: payload.recent_podcasts\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","import {ACTIONS} from '../actions/actions';\r\n\r\nconst initialState = {\r\n    current_time: 0,\r\n    volume:       1\r\n}\r\n\r\nexport default function playerReducer(\r\n    state = initialState,\r\n    {type, payload}\r\n) {\r\n    switch (type) {\r\n        case ACTIONS.CHANGE_VOLUME: \r\n            return {\r\n                ...state,\r\n                volume: payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport podcastsReducer   from './podcasts-reducer';\r\nimport playerReducer     from './player-reducer';\r\n\r\nconst allReducers = combineReducers({\r\n    podcasts: podcastsReducer,\r\n    player:   playerReducer\r\n});\r\n\r\nexport default allReducers;","import { \r\n    applyMiddleware, \r\n    compose,  \r\n    createStore \r\n} from \"redux\";\r\nimport allReducers from \"./reducers/all-reducers\";\r\nimport    thunk    from 'redux-thunk';\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store =  createStore(\r\n    allReducers,\r\n    composeEnhancer(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './sw_register';\nimport {Provider} from 'react-redux';\nimport    store   from './redux/store';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('root')\n);\n\n\n// serviceWorker.register();"],"sourceRoot":""}