{"version":3,"sources":["logo.svg","img/icons/play.svg","img/icons/pause.svg","img/icons/volume.svg","components/Podcast/Podcast.jsx","components/Slider/Slider.jsx","components/helpers.js","components/Player/Player.jsx","components/RadioWrap/RadioWrap.jsx","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Podcast","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","info","active","shown","recent","pushPropsToWrap","bind","assertThisInitialized","loadImage","pushActivePodcast","current_podcast_info","current_podcast_index","index","_this2","image","Image","addEventListener","setState","src","cover","react_default","a","createElement","className","concat","onClick","style","backgroundImage","title","date","description","_state","Component","Slider","type","duration","value","progress","drag_size","direction","force_update","dragging","updateProgress","pointerDown","pointerUp","callback","recalculateOffsets","debounce","slider_bar","React","createRef","slider_progress","slider_drag","allow_progress","window","removeEventListener","slider_bar_left","current","getBoundingClientRect","left","slider_bar_width","width","e","additional_props","clientX","new_props","undefined","keys","map","key","devider","_this3","buffered","cur","Math","round","prop","sec_num","parseInt","floor","hours","minutes","seconds","secToTime","progress_bar_length","autohide","ref","onPointerDown","height","Player","playing","current_time","volume","audio","Audio","togglePlay","progressUpdate","recieveTimeFromSlider","recieveVolumeFromSlider","updateActivePodcastState","pause","currentTime","play","_this4","prevState","objectSpread","time","id","href","logo","alt","playIcon","pauseIcon","Slider_Slider","duration_sec","volumeIcon","RadioWrap","api_link","apiLink","podcasts","next_to_display","display_counter","displayCounter","cache_counter","cacheCounter","active_podcast","latest_podcasts","parsePodcast","loadMore","setActivePodcast","getActivePodcastState","podcastsToRender","fetch","then","response","text","xmlToJson","xml","obj","nodeType","attributes","length","j","attribute","item","nodeName","nodeValue","hasChildNodes","i","childNodes","push","old","DOMParser","parseFromString","rss","channel","podcast","split","Number","timeToSec","guid","wideImage","current_podcast","latest","duplicate","indexOf","arr","old_index","new_index","k","splice","shiftItem","unshift","activePodcast","updatedPodcasts","pod","slice_amount","slice","is_recent","Podcast_Podcast","amount_to_show","podcasts_to_render","latest_podcasts_to_render","Player_Player","App","RadioWrap_RadioWrap","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.ddefd893.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.02d30e17.svg\";","module.exports = __webpack_public_path__ + \"static/media/play.5004d330.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause.07100aab.svg\";","module.exports = __webpack_public_path__ + \"static/media/volume.69de45ca.svg\";","import React, { Component } from 'react';\r\n\r\n\r\nexport default class Podcast extends Component {\r\n\t//Constructor\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tinfo:    this.props.info,\r\n\t\t\tactive:  this.props.active || false,\r\n\t\t\tshown:   false,\r\n\t\t\trecent:  this.props.recent || false\r\n\t\t};\r\n\r\n\t\tthis.pushPropsToWrap = this.pushPropsToWrap.bind(this);\r\n\t\tthis.loadImage = this.loadImage.bind(this);\r\n\t}\r\n\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.loadImage();\r\n\t}\r\n\r\n\r\n\t//Recieving new props\r\n\tstatic getDerivedStateFromProps(props, state) {\r\n\t\tlet _state = {};\r\n\t\tif (props.active !== state.active) {\r\n\t\t\t\t_state.active = props.active;\r\n\t\t};\r\n\t\tif (props.info !== state.info) {\r\n\t\t\t_state.info = props.info;\r\n\t\t};\r\n\t\treturn _state;\r\n\t}\r\n\t\r\n\t//Pushing props to RadioWarp component\r\n\tpushPropsToWrap() {\r\n\t\tthis.props.pushActivePodcast(\r\n\t\t\t{\r\n\t\t\t\tcurrent_podcast_info:  this.state.info,\r\n\t\t\t\tcurrent_podcast_index: this.state.info.index\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\r\n\t//Load image to run animation\r\n\tloadImage() {\r\n\t\tthis.image = new Image();\r\n\t\tthis.image.addEventListener('load', () => {\r\n\t\t\tdelete this.image;\r\n\t\t\tthis.setState({shown: true});\r\n\t\t});\r\n\t\tthis.image.src = this.state.info.cover;\r\n\t}\r\n\r\n\r\n    render() {\r\n        return (\r\n\t\t\t<div \r\n\t\t\t\tclassName = {`podcast roboto ${this.state.shown ? 'podcast_shown' : ''} ${this.state.active ? 'podcast_active' : ''} ${this.state.recent ? 'podcast_recent' : ''}`}\r\n\t\t\t\tonClick   = {this.pushPropsToWrap}\r\n\t\t\t>\r\n\t\t\t\t<div \r\n\t\t\t\t\tclassName = \"podcast__wrapper\"\r\n\t\t\t\t\tstyle     = {{backgroundImage: `url(${this.state.info.cover})`}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"podcast__title medium-font\">\r\n\t\t\t\t\t\t<p>{this.state.info.title}</p>\r\n\t\t\t\t\t\t<p>{this.state.info.date}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"podcast__desc small-font\">\r\n\t\t\t\t\t\t<p>{this.state.info.description}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport     {secToTime}      from '../helpers';\r\nimport     {debounce}       from 'lodash';\r\n\r\n\r\nexport default class Slider extends Component {\r\n    //Constructor\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            type:             this.props.type,\r\n            duration:         this.props.duration,\r\n            value:            this.props.value,\r\n            progress:         this.props.progress,\r\n            drag_size:        this.props.drag_size,\r\n            direction:        this.props.direction,\r\n            force_update:     this.props.force_update, //this.props.allow_progress,\r\n            dragging:         false,\r\n        }\r\n        this.updateProgress     = this.updateProgress.bind(this);\r\n        this.pointerDown        = this.pointerDown.bind(this);\r\n        this.pointerUp          = this.pointerUp.bind(this);\r\n        this.callback           = this.props.callback;\r\n        this.recalculateOffsets = debounce(this.recalculateOffsets.bind(this), 400);\r\n        this.slider_bar         = React.createRef();\r\n        this.slider_progress    = React.createRef();\r\n        this.slider_drag        = React.createRef();\r\n        this.allow_progress     = false; //Indicates if component is allowed to take props from parent component\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.recalculateOffsets();\r\n        window.addEventListener('resize', this.recalculateOffsets);\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.recalculateOffsets);\r\n    }\r\n\r\n\r\n    //Changing state\r\n    componentWillReceiveProps(props) {\r\n        if (props !== this.props && ( (this.state.dragging && this.allow_progress) || (this.state.dragging === false && this.allow_progress === false) )) {\r\n            this.setState(props);\r\n        }\r\n    }\r\n\r\n\r\n    //Recalculating slider_bar position\r\n    recalculateOffsets() {\r\n        this.slider_bar_left  = this.slider_bar.current.getBoundingClientRect().left;\r\n        this.slider_bar_width = this.slider_bar.current.getBoundingClientRect().width;\r\n    };\r\n\r\n\r\n    //Updating slider progress\r\n    updateProgress(e, additional_props) {\r\n        let left     = e.clientX;\r\n        let progress = this.state.value*((left - this.slider_bar_left)/this.slider_bar_width);\r\n\r\n        progress = progress > this.state.value ? this.state.value : progress < 0 ? 0 : progress;\r\n\r\n        let new_props = {\r\n            progress: progress\r\n        }\r\n\r\n        if (additional_props !== undefined) {\r\n            Object.keys(additional_props).map(key => {\r\n               new_props[key] = additional_props[key];\r\n            });\r\n        }\r\n\r\n        this.setState(new_props, \r\n            () => {\r\n                if (this.state.dragging === false || this.state.force_update) {\r\n                    let devider = this.state.type === 'volume' ? 100 : 1;\r\n                    this.callback(progress/devider);\r\n                    this.allow_progress = false;\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    //PointerDown event on slider_drag\r\n    pointerDown() {\r\n        this.setState({\r\n                        dragging: true\r\n                      }, () => this.allow_progress = true);\r\n        window.addEventListener('pointermove', this.updateProgress);\r\n        window.addEventListener('pointerup', this.pointerUp);\r\n    }\r\n\r\n\r\n    //PointerUp event \r\n    pointerUp(e) {\r\n        window.removeEventListener('pointermove', this.updateProgress);\r\n        window.removeEventListener('pointerup', this.pointerUp);\r\n        this.updateProgress(e, {dragging: false});\r\n    }\r\n\r\n\r\n    render() {\r\n        let buffered = '';\r\n        let cur      = this.state.type === 'volume' ? Math.round(this.state.progress) : secToTime(this.state.progress);\r\n        let progress_bar_length  = `${this.state.progress/this.state.value*100}%`;\r\n\r\n        if (this.state.type === 'time') {\r\n            buffered = <span className=\"slider__buffered\"></span>;\r\n        }\r\n\r\n        return (\r\n            <div className={`slider ${this.state.dragging ? 'slider_dragging' : ''} ${this.state.autohide ? 'slider_autohide' : ''}`}>\r\n                <span \r\n                    className = \"slider__bar\" \r\n                    ref       = {this.slider_bar} \r\n                    onClick   = {this.pointerUp}\r\n                >\r\n                    <span \r\n                        className = \"slider__cur\"\r\n                        ref       = {this.slider_progress}\r\n                        style     = {{width: progress_bar_length}}\r\n                    >\r\n                    </span>\r\n                    {buffered}\r\n                    <span \r\n                        className     = \"slider__drag\" \r\n                        onPointerDown = {this.pointerDown}\r\n                        ref           = {this.slider_drag}\r\n                        style         = {{\r\n                                            left:   progress_bar_length, \r\n                                            width:  `${this.state.drag_size}px`, \r\n                                            height: `${this.state.drag_size}px`\r\n                                       }}\r\n                    >\r\n                    </span>\r\n                </span>\r\n                <div className=\"slider__range roboto xsmall-font\">\r\n                    <span className=\"slider__range-cur\">{cur}</span>\r\n                    <span className=\"slider__range-length\">{this.state.duration}</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","export function xmlToJson(xml) {\r\n\r\n    var obj = {};\r\n\r\n    if (xml.nodeType === 1) {\r\n        if (xml.attributes.length > 0) {\r\n        obj[\"@attributes\"] = {};\r\n            for (var j = 0; j < xml.attributes.length; j++) {\r\n                var attribute = xml.attributes.item(j);\r\n                obj[\"@attributes\"][attribute.nodeName] = attribute.nodeValue;\r\n            }\r\n        }\r\n    } else if (xml.nodeType === 3) {\r\n        obj = xml.nodeValue;\r\n    }\r\n\r\n    if (xml.hasChildNodes()) {\r\n        for(var i = 0; i < xml.childNodes.length; i++) {\r\n            var item = xml.childNodes.item(i);\r\n            var nodeName = item.nodeName;\r\n            if (typeof(obj[nodeName]) == \"undefined\") {\r\n                obj[nodeName] = xmlToJson(item);\r\n            } else {\r\n                if (typeof(obj[nodeName].push) == \"undefined\") {\r\n                    var old = obj[nodeName];\r\n                    obj[nodeName] = [];\r\n                    obj[nodeName].push(old);\r\n                }\r\n                obj[nodeName].push(xmlToJson(item));\r\n            }\r\n        }\r\n    }\r\n    \r\n    return obj;\r\n\r\n}\r\n\r\n\r\nexport function timeToSec(prop) {\r\n    let time = prop.split(':'),\r\n        sec  = 0;\r\n    if (time.length > 2) {\r\n        sec = Number(time[0])*3600 + Number(time[1])*60 + Number(time[2]);\r\n    } else if (time.length === 2) {\r\n        sec = Number(time[0])*60 + Number(time[1]);\r\n    } else {\r\n        sec = Number(time[0]);\r\n    }\r\n    return sec;\r\n}\r\n\r\n\r\nexport function secToTime(prop) {\r\n    let sec_num = parseInt(Math.floor(prop), 10);\r\n    let hours   = Math.floor(sec_num / 3600);\r\n    let minutes = Math.floor((sec_num - (hours * 3600)) / 60);\r\n    let seconds = sec_num - (hours * 3600) - (minutes * 60);\r\n\r\n    if (hours   < 10) {hours   = \"0\"+hours;}\r\n    if (minutes < 10) {minutes = \"0\"+minutes;}\r\n    if (seconds < 10) {seconds = \"0\"+seconds;}\r\n    return `${hours}:${minutes}:${seconds}`;\r\n}\r\n\r\n\r\nexport function shiftItem(arr, old_index, new_index) {\r\n    if (new_index >= arr.length) {\r\n        var k = new_index - arr.length + 1;\r\n        while (k--) {\r\n            arr.push(undefined);\r\n        }\r\n    }\r\n    arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\r\n}","import React, { Component } from 'react';\r\nimport \t     Slider         from '../Slider/Slider';\r\nimport     {debounce}       from 'lodash';\r\nimport        logo          from '../../logo.svg';\r\nimport      playIcon        from \"../../img/icons/play.svg\";\r\nimport      pauseIcon       from \"../../img/icons/pause.svg\";\r\nimport      volumeIcon      from \"../../img/icons/volume.svg\";\r\n\r\n\r\nexport default class Player extends Component {\r\n\t//Constructor\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tinfo:         this.props.info,\r\n\t\t\tplaying:      false,\r\n\t\t\tcurrent_time: this.props.info.current_time || 0,\r\n\t\t\tvolume:       this.props.volume || 1\r\n\t\t};\r\n\r\n\t\tthis.audio                    = new Audio();\r\n\t\tthis.audio.volume             = this.props.volume || 1;\r\n\t\tthis.togglePlay               = this.togglePlay.bind(this);\r\n\t\tthis.progressUpdate           = this.progressUpdate.bind(this);\r\n\t\tthis.recieveTimeFromSlider    = this.recieveTimeFromSlider.bind(this);\r\n\t\tthis.recieveVolumeFromSlider  = this.recieveVolumeFromSlider.bind(this);\r\n\t\tthis.updateActivePodcastState = this.props.updateActivePodcastState;\r\n\t\tthis.audio.addEventListener('timeupdate', this.progressUpdate);\r\n\t}\r\n\r\n\r\n\t//Recieving new props\r\n\tcomponentWillReceiveProps(props) {\r\n\t\t// console.log(props.info !== this.props.info);\r\n        if (props.info !== this.props.info) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tinfo: props.info\r\n\t\t\t}, () => {\r\n\t\t\t\tif(this.state.info.audio !== this.audio.src) {\r\n\t\t\t\t\tthis.audio.pause();\r\n\t\t\t\t\tthis.audio.src         = this.state.info.audio;\r\n\t\t\t\t\tthis.audio.currentTime = this.state.info.current_time || 0;\r\n\t\t\t\t\tif (this.state.playing) this.audio.play();\r\n\t\t\t\t}\r\n\t\t\t});\r\n        }\r\n    }\r\n\r\n\r\n\t//Toggle audio playback\r\n\ttogglePlay() {\r\n\t\tthis.setState({playing: !this.state.playing},\r\n\t\t\t() => {\r\n\t\t\t\tif (this.state.playing) {\r\n\t\t\t\t\tthis.audio.play();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.audio.pause();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\r\n\t//Updating slider progress\r\n\tprogressUpdate() {\r\n\t\tthis.setState(prevState => ({\r\n\t\t\tcurrent_time: this.audio.currentTime,\r\n\t\t\tinfo: {\r\n\t\t\t\t...prevState.info,\r\n\t\t\t\tcurrent_time: this.audio.currentTime\r\n\t\t\t}\r\n\t\t}),() => { \r\n\t\t\tif(this.state.playing) this.updateActivePodcastState(this.state.info);\r\n\t\t})\r\n\t}\r\n\r\n\r\n\t//Time slider callback\r\n\trecieveTimeFromSlider(time) {\r\n\t\tthis.audio.currentTime = time;\r\n\t\tthis.setState({current_time: time});\r\n\t}\r\n\r\n\r\n\t//Time slider callback\r\n\trecieveVolumeFromSlider(volume) {\r\n\t\tthis.audio.volume = volume;\r\n\t\tthis.setState({volume: volume});\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={`player${this.state.playing ? ' player_playing' : ''}`} id=\"player\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"player__wrap\">\r\n\t\t\t\t\t\t<div className=\"logo\" id=\"logo\">\r\n\t\t\t\t\t\t\t<a href=\"#1\" className=\"logo__link\">\r\n\t\t\t\t\t\t\t\t<img src={logo} className=\"logo__img\" alt=\"logo\"/>\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"player__controls\">\r\n\t\t\t\t\t\t\t<h3 className=\"player__title roboto medium-font\">\r\n\t\t\t\t\t\t\t\t{`${this.state.info.title} - ${this.state.info.date}`}\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<div className=\"player__row player__row_center\">\r\n\t\t\t\t\t\t\t\t<span className=\"player__playback\" onClick={this.togglePlay}>\r\n\t\t\t\t\t\t\t\t\t<img \r\n\t\t\t\t\t\t\t\t\t\tclassName=\"player__icon player__icon_play\" \r\n\t\t\t\t\t\t\t\t\t\tsrc={playIcon} \r\n\t\t\t\t\t\t\t\t\t\talt=\"play icon\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<img \r\n\t\t\t\t\t\t\t\t\t\tclassName=\"player__icon player__icon_pause\" \r\n\t\t\t\t\t\t\t\t\t\tsrc={pauseIcon} \r\n\t\t\t\t\t\t\t\t\t\talt=\"pause icon\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<Slider \r\n\t\t\t\t\t\t\t\ttype           = 'time' //'time' or 'volume'\r\n\t\t\t\t\t\t\t\tduration       = {this.state.info.duration}\r\n\t\t\t\t\t\t\t\tvalue          = {this.state.info.duration_sec}\r\n\t\t\t\t\t\t\t\tprogress       = {this.state.current_time}\r\n\t\t\t\t\t\t\t\tdrag_size      = {10}\r\n\t\t\t\t\t\t\t\tdirection      = 'horizontal'\r\n\t\t\t\t\t\t\t\tcallback       = {this.recieveTimeFromSlider}\r\n\t\t\t\t\t\t\t\tforce_update   = {false}\r\n\t\t\t\t\t\t\t\tautohide       = {false}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<div className=\"player__volume\">\r\n\t\t\t\t\t\t\t\t<img \r\n\t\t\t\t\t\t\t\t\tsrc={volumeIcon} \r\n\t\t\t\t\t\t\t\t\tclassName=\"player__icon player__icon_volume\" \r\n\t\t\t\t\t\t\t\t\talt=\"volume icon\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Slider \r\n\t\t\t\t\t\t\t\t\ttype           = 'volume' //'time' or 'volume'\r\n\t\t\t\t\t\t\t\t\tduration       = {100}\r\n\t\t\t\t\t\t\t\t\tvalue          = {100}\r\n\t\t\t\t\t\t\t\t\tprogress       = {this.state.volume*100}\r\n\t\t\t\t\t\t\t\t\tdrag_size      = {10}\r\n\t\t\t\t\t\t\t\t\tdirection      = 'horizontal'\r\n\t\t\t\t\t\t\t\t\tcallback       = {this.recieveVolumeFromSlider}\r\n\t\t\t\t\t\t\t\t\tforce_update   = {true}\r\n\t\t\t\t\t\t\t\t\tautohide       = {true}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"player__cover\">\r\n\t\t\t\t\t\t\t<img \r\n\t\t\t\t\t\t\t\tsrc={this.state.info.cover} \r\n\t\t\t\t\t\t\t\talt=\"podcast cover\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","import React, { Component } from 'react';\r\nimport     {xmlToJson}      from '../helpers';\r\nimport     {timeToSec}      from '../helpers';\r\nimport     {shiftItem}      from '../helpers';\r\nimport       Podcast        from '../Podcast/Podcast';\r\nimport       Player         from '../Player/Player';\r\n\r\n\r\nexport default class RadioWrap extends Component {\r\n    //Constructor\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            api_link:        this.props.apiLink,\r\n            podcasts:        [],\r\n            next_to_display: 0,\r\n            display_counter: this.props.displayCounter,\r\n            cache_counter:   this.props.cacheCounter,\r\n            active_podcast:  {},\r\n            latest_podcasts: []\r\n        };\r\n\r\n        this.parsePodcast          = this.parsePodcast.bind(this);\r\n        this.loadMore              = this.loadMore.bind(this);\r\n        this.setActivePodcast      = this.setActivePodcast.bind(this);\r\n        this.getActivePodcastState = this.getActivePodcastState.bind(this);\r\n        this.podcastsToRender      = this.podcastsToRender.bind(this);\r\n    }\r\n\r\n\r\n    //Loading and parsing XML\r\n    componentDidMount() {\r\n        fetch(this.state.api_link)\r\n            .then(response => response.text())\r\n            .then(text     => {\r\n                let podcasts = xmlToJson(new DOMParser().parseFromString(text, \"text/xml\")).rss.channel.item;\r\n                this.setState({podcasts: podcasts.map((podcast, index) => this.parsePodcast(podcast, index))});\r\n            });\r\n    }\r\n\r\n\r\n    //Creating podcast objects\r\n    parsePodcast(podcast, index) {\r\n        return {\r\n            index:          index,\r\n            title:          podcast.title['#text'].split(' - ')[0],\r\n            date:           podcast.title['#text'].split(' - ')[1],\r\n            description:    podcast.description['#text'],\r\n            duration:       podcast['itunes:duration']['#text'],\r\n            duration_sec:   timeToSec(podcast['itunes:duration']['#text']),\r\n            audio:          podcast.guid['#text'],\r\n            cover:          podcast.wideImage['#text'],\r\n            current_time:   0\r\n        }\r\n    }\r\n\r\n\r\n    //Changing amount of displaying podcasts\r\n    loadMore() {\r\n        this.setState({next_to_display: this.state.next_to_display + this.state.display_counter});\r\n    }\r\n\r\n\r\n    //Callback for Podcast component 'click' event\r\n    setActivePodcast(current_podcast) {\r\n        let latest = this.state.latest_podcasts,\r\n            cur    = current_podcast.current_podcast_info;\r\n\r\n        if (cur !== this.state.active_podcast) {\r\n            latest = this.state.latest_podcasts;\r\n            let duplicate = latest.indexOf(cur);\r\n            if (duplicate > 0) {\r\n                latest[duplicate].shown = false;\r\n                shiftItem(latest, duplicate, 0);\r\n            } else {\r\n                latest.unshift(cur);\r\n            }\r\n            if (latest.length > this.state.cache_counter) latest = latest.splice(0, this.state.cache_counter);\r\n        }\r\n\r\n        this.setState({\r\n            latest_podcasts: latest,\r\n            active_podcast:  cur || current_podcast,\r\n            activePodcast:   current_podcast.current_podcast_index\r\n        });\r\n    }\r\n\r\n\r\n    //Updating state of active podcast\r\n    getActivePodcastState(active_podcast) {\r\n        // console.log(active_podcast);\r\n        let updatedPodcasts = this.state.podcasts;\r\n        updatedPodcasts[active_podcast.index] = active_podcast;\r\n        let latest = this.state.latest_podcasts;\r\n        latest.map(pod => {\r\n            if (pod.index === active_podcast.index) {\r\n                latest[latest.indexOf(pod)] = active_podcast;\r\n            }\r\n        })\r\n        this.setState({\r\n            latest_podcasts: latest,\r\n            podcasts:        updatedPodcasts,\r\n            active_podcast:  active_podcast\r\n        })\r\n    }\r\n\r\n\r\n    //podcastsToRender\r\n    podcastsToRender(arr, slice_amount, recent) {\r\n        let podcasts = slice_amount ? arr.slice(0, slice_amount) : arr;\r\n        const is_recent = recent;\r\n        return podcasts = podcasts.map(\r\n            (podcast) => {\r\n                let active = podcast.index === this.state.active_podcast.index ? true : false;\r\n\r\n                return  <Podcast \r\n                            key               = {podcast.index}\r\n                            info              = {podcast}\r\n                            pushActivePodcast = {this.setActivePodcast}\r\n                            active            = {active}\r\n                            recent            = {is_recent}\r\n                        />\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    render() {\r\n        let amount_to_show            = this.state.next_to_display + this.state.display_counter;\r\n        let podcasts_to_render        = this.podcastsToRender(this.state.podcasts, amount_to_show, false);\r\n        let latest_podcasts_to_render = this.podcastsToRender(this.state.latest_podcasts, false, true);\r\n\r\n        return (\r\n            <div className=\"radio\" id=\"radio\">\r\n                <Player \r\n                    info                     = {this.state.active_podcast}\r\n                    updateActivePodcastState = {this.getActivePodcastState}\r\n                />\r\n                <h2 className=\"radio__title alerta xl-font\">Recent podcasts:</h2>\r\n                <div className=\"radio__wrap radio__wrap_latest\">\r\n                    {latest_podcasts_to_render}\r\n                </div>\r\n                <h2 className=\"radio__title alerta xl-font\">Podcasts:</h2>\r\n                <div className=\"radio__wrap\">\r\n                    {podcasts_to_render}\r\n                </div>\r\n                <button className = \"load roboto\" id=\"load\"\r\n                        onClick   = {this.loadMore}\r\n                >\r\n                    Load more podcasts\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\nimport      RadioWrap       from './components/RadioWrap/RadioWrap';\nimport './App.sass'\n\nexport default class App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<RadioWrap \n\t\t\t\t\t\tapiLink=\"https://tools.planetradio.co.uk/core/podcasts/rss.php?name=radio-1-norge\"\n\t\t\t\t\t\tdisplayCounter={12}\n\t\t\t\t\t\tcacheCounter={5}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();"],"sourceRoot":""}