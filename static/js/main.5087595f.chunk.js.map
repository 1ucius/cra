{"version":3,"sources":["img/icons/play.svg","img/icons/pause.svg","img/icons/volume.svg","logo.svg","components/Podcast/Podcast.jsx","components/Slider/Slider.jsx","components/helpers.js","components/Player/Player.jsx","components/RadioWrap/RadioWrap.jsx","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Podcast","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","info","active","shown","recent","pushPropsToWrap","bind","assertThisInitialized","loadImage","pushActivePodcast","current_podcast_info","current_podcast_index","index","_this2","image","Image","addEventListener","setState","src","cover","react_default","a","createElement","className","concat","onClick","style","backgroundImage","title","date","_state","Component","Slider","type","duration","value","progress","drag_size","direction","force_update","dragging","updateProgress","pointerDown","pointerUp","callback","recalculateOffsets","debounce","slider_bar","React","createRef","slider_progress","slider_drag","allow_progress","window","removeEventListener","slider_bar_left","current","getBoundingClientRect","left","slider_bar_width","width","e","additional_props","clientX","new_props","undefined","keys","map","key","devider","_this3","buffered","cur","Math","round","prop","sec_num","parseInt","floor","hours","minutes","seconds","secToTime","progress_bar_length","autohide","ref","onPointerDown","height","Player","playing","current_time","volume","audio","Audio","togglePlay","progressUpdate","recieveTimeFromSlider","recieveVolumeFromSlider","updateActivePodcastState","pause","currentTime","play","_this4","prevState","objectSpread","time","id","alt","playIcon","pauseIcon","Slider_Slider","duration_sec","volumeIcon","RadioWrap","api_link","apiLink","podcasts","next_to_display","display_counter","displayCounter","cache_counter","cacheCounter","active_podcast","latest_podcasts","parsePodcast","loadMore","setActivePodcast","getActivePodcastState","podcastsToRender","fetch","then","response","text","xmlToJson","xml","obj","nodeType","attributes","length","j","attribute","item","nodeName","nodeValue","hasChildNodes","i","childNodes","push","old","DOMParser","parseFromString","rss","channel","podcast","split","description","Number","timeToSec","guid","wideImage","current_podcast","latest","duplicate","indexOf","arr","old_index","new_index","k","splice","shiftItem","unshift","activePodcast","updatedPodcasts","pod","slice_amount","slice","is_recent","Podcast_Podcast","amount_to_show","podcasts_to_render","latest_podcasts_to_render","href","logo","Player_Player","App","RadioWrap_RadioWrap","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.5087595f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/play.5004d330.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause.07100aab.svg\";","module.exports = __webpack_public_path__ + \"static/media/volume.69de45ca.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.02d30e17.svg\";","import React, { Component } from 'react';\r\n\r\n\r\nexport default class Podcast extends Component {\r\n\t//Constructor\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tinfo:    this.props.info,\r\n\t\t\tactive:  this.props.active || false,\r\n\t\t\tshown:   false,\r\n\t\t\trecent:  this.props.recent || false\r\n\t\t};\r\n\r\n\t\tthis.pushPropsToWrap = this.pushPropsToWrap.bind(this);\r\n\t\tthis.loadImage = this.loadImage.bind(this);\r\n\t}\r\n\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.loadImage();\r\n\t}\r\n\r\n\r\n\t//Recieving new props\r\n\tstatic getDerivedStateFromProps(props, state) {\r\n\t\tlet _state = {};\r\n\t\tif (props.active !== state.active) {\r\n\t\t\t\t_state.active = props.active;\r\n\t\t};\r\n\t\tif (props.info !== state.info) {\r\n\t\t\t_state.info = props.info;\r\n\t\t};\r\n\t\treturn _state;\r\n\t}\r\n\t\r\n\t//Pushing props to RadioWarp component\r\n\tpushPropsToWrap() {\r\n\t\tthis.props.pushActivePodcast(\r\n\t\t\t{\r\n\t\t\t\tcurrent_podcast_info:  this.state.info,\r\n\t\t\t\tcurrent_podcast_index: this.state.info.index\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\r\n\t//Load image to run animation\r\n\tloadImage() {\r\n\t\tthis.image = new Image();\r\n\t\tthis.image.addEventListener('load', () => {\r\n\t\t\tdelete this.image;\r\n\t\t\tthis.setState({shown: true});\r\n\t\t});\r\n\t\tthis.image.src = this.state.info.cover;\r\n\t}\r\n\r\n\r\n    render() {\r\n\t\t// let desc = '';\r\n\t\t// if (!this.state.recent) {\r\n\t\t// \tdesc = <div className=\"podcast__desc small-font\">\r\n\t\t// \t\t\t   <p>{this.state.info.description}</p>\r\n\t\t// \t\t   </div>\r\n\t\t// }\r\n\r\n\r\n        return (\r\n\t\t\t<div \r\n\t\t\t\tclassName = {`podcast roboto ${this.state.shown ? 'podcast_shown' : ''} ${this.state.active ? 'podcast_active' : ''} ${this.state.recent ? 'podcast_recent xsmall-font' : ' small-font'}`}\r\n\t\t\t\tonClick   = {this.pushPropsToWrap}\r\n\t\t\t>\r\n\t\t\t\t<div \r\n\t\t\t\t\tclassName = \"podcast__cover\"\r\n\t\t\t\t\tstyle     = {{backgroundImage: `url(${this.state.info.cover})`}}\r\n\t\t\t\t>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"podcast__wrapper\">\r\n\t\t\t\t\t<div className=\"podcast__title\">\r\n\t\t\t\t\t\t<p>{this.state.info.title}</p>\r\n\t\t\t\t\t\t<p>{this.state.info.date}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{/* {desc} */}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport     {secToTime}      from '../helpers';\r\nimport     {debounce}       from 'lodash';\r\n\r\n\r\nexport default class Slider extends Component {\r\n    //Constructor\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            type:             this.props.type,\r\n            duration:         this.props.duration,\r\n            value:            this.props.value,\r\n            progress:         this.props.progress,\r\n            drag_size:        this.props.drag_size,\r\n            direction:        this.props.direction,\r\n            force_update:     this.props.force_update, //this.props.allow_progress,\r\n            dragging:         false,\r\n        }\r\n        this.updateProgress     = this.updateProgress.bind(this);\r\n        this.pointerDown        = this.pointerDown.bind(this);\r\n        this.pointerUp          = this.pointerUp.bind(this);\r\n        this.callback           = this.props.callback;\r\n        this.recalculateOffsets = debounce(this.recalculateOffsets.bind(this), 400);\r\n        this.slider_bar         = React.createRef();\r\n        this.slider_progress    = React.createRef();\r\n        this.slider_drag        = React.createRef();\r\n        this.allow_progress     = false; //Indicates if component is allowed to take props from parent component\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.recalculateOffsets();\r\n        window.addEventListener('resize', this.recalculateOffsets);\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.recalculateOffsets);\r\n    }\r\n\r\n\r\n    //Changing state\r\n    componentWillReceiveProps(props) {\r\n        if (props !== this.props && ( (this.state.dragging && this.allow_progress) || (this.state.dragging === false && this.allow_progress === false) )) {\r\n            this.setState(props);\r\n        }\r\n    }\r\n\r\n\r\n    //Recalculating slider_bar position\r\n    recalculateOffsets() {\r\n        this.slider_bar_left  = this.slider_bar.current.getBoundingClientRect().left;\r\n        this.slider_bar_width = this.slider_bar.current.getBoundingClientRect().width;\r\n    };\r\n\r\n\r\n    //Updating slider progress\r\n    updateProgress(e, additional_props) {\r\n        let left     = e.clientX;\r\n        let progress = this.state.value*((left - this.slider_bar_left)/this.slider_bar_width);\r\n\r\n        progress = progress > this.state.value ? this.state.value : progress < 0 ? 0 : progress;\r\n\r\n        let new_props = {\r\n            progress: progress\r\n        }\r\n\r\n        if (additional_props !== undefined) {\r\n            Object.keys(additional_props).map(key => {\r\n               new_props[key] = additional_props[key];\r\n            });\r\n        }\r\n\r\n        this.setState(new_props, \r\n            () => {\r\n                if (this.state.dragging === false || this.state.force_update) {\r\n                    let devider = this.state.type === 'volume' ? 100 : 1;\r\n                    this.callback(progress/devider);\r\n                    this.allow_progress = false;\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    //PointerDown event on slider_drag\r\n    pointerDown() {\r\n        this.setState({\r\n                        dragging: true\r\n                      }, () => this.allow_progress = true);\r\n        window.addEventListener('pointermove', this.updateProgress);\r\n        window.addEventListener('pointerup', this.pointerUp);\r\n    }\r\n\r\n\r\n    //PointerUp event \r\n    pointerUp(e) {\r\n        window.removeEventListener('pointermove', this.updateProgress);\r\n        window.removeEventListener('pointerup', this.pointerUp);\r\n        this.updateProgress(e, {dragging: false});\r\n    }\r\n\r\n\r\n    render() {\r\n        let buffered = '';\r\n        let cur      = this.state.type === 'volume' ? Math.round(this.state.progress) : secToTime(this.state.progress);\r\n        let progress_bar_length  = `${this.state.progress/this.state.value*100}%`;\r\n\r\n        if (this.state.type === 'time') {\r\n            buffered = <span className=\"slider__buffered\"></span>;\r\n        }\r\n\r\n        return (\r\n            <div className={`slider ${this.state.dragging ? 'slider_dragging' : ''} ${this.state.autohide ? 'slider_autohide' : ''}`}>\r\n                <span \r\n                    className = \"slider__bar\" \r\n                    ref       = {this.slider_bar} \r\n                    onClick   = {this.pointerUp}\r\n                >\r\n                    <span \r\n                        className = \"slider__cur\"\r\n                        ref       = {this.slider_progress}\r\n                        style     = {{width: progress_bar_length}}\r\n                    >\r\n                    </span>\r\n                    {buffered}\r\n                    <span \r\n                        className     = \"slider__drag\" \r\n                        onPointerDown = {this.pointerDown}\r\n                        ref           = {this.slider_drag}\r\n                        style         = {{\r\n                                            left:   progress_bar_length, \r\n                                            width:  `${this.state.drag_size}px`, \r\n                                            height: `${this.state.drag_size}px`\r\n                                       }}\r\n                    >\r\n                    </span>\r\n                </span>\r\n                <div className=\"slider__range roboto xxsmall-font\">\r\n                    <span className=\"slider__range-cur\">{cur}</span>\r\n                    <span className=\"slider__range-length\">{this.state.duration}</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","export function xmlToJson(xml) {\r\n\r\n    var obj = {};\r\n\r\n    if (xml.nodeType === 1) {\r\n        if (xml.attributes.length > 0) {\r\n        obj[\"@attributes\"] = {};\r\n            for (var j = 0; j < xml.attributes.length; j++) {\r\n                var attribute = xml.attributes.item(j);\r\n                obj[\"@attributes\"][attribute.nodeName] = attribute.nodeValue;\r\n            }\r\n        }\r\n    } else if (xml.nodeType === 3) {\r\n        obj = xml.nodeValue;\r\n    }\r\n\r\n    if (xml.hasChildNodes()) {\r\n        for(var i = 0; i < xml.childNodes.length; i++) {\r\n            var item = xml.childNodes.item(i);\r\n            var nodeName = item.nodeName;\r\n            if (typeof(obj[nodeName]) == \"undefined\") {\r\n                obj[nodeName] = xmlToJson(item);\r\n            } else {\r\n                if (typeof(obj[nodeName].push) == \"undefined\") {\r\n                    var old = obj[nodeName];\r\n                    obj[nodeName] = [];\r\n                    obj[nodeName].push(old);\r\n                }\r\n                obj[nodeName].push(xmlToJson(item));\r\n            }\r\n        }\r\n    }\r\n    \r\n    return obj;\r\n\r\n}\r\n\r\n\r\nexport function timeToSec(prop) {\r\n    let time = prop.split(':'),\r\n        sec  = 0;\r\n    if (time.length > 2) {\r\n        sec = Number(time[0])*3600 + Number(time[1])*60 + Number(time[2]);\r\n    } else if (time.length === 2) {\r\n        sec = Number(time[0])*60 + Number(time[1]);\r\n    } else {\r\n        sec = Number(time[0]);\r\n    }\r\n    return sec;\r\n}\r\n\r\n\r\nexport function secToTime(prop) {\r\n    let sec_num = parseInt(Math.floor(prop), 10);\r\n    let hours   = Math.floor(sec_num / 3600);\r\n    let minutes = Math.floor((sec_num - (hours * 3600)) / 60);\r\n    let seconds = sec_num - (hours * 3600) - (minutes * 60);\r\n\r\n    if (hours   < 10) {hours   = \"0\"+hours;}\r\n    if (minutes < 10) {minutes = \"0\"+minutes;}\r\n    if (seconds < 10) {seconds = \"0\"+seconds;}\r\n    return `${hours}:${minutes}:${seconds}`;\r\n}\r\n\r\n\r\nexport function shiftItem(arr, old_index, new_index) {\r\n    if (new_index >= arr.length) {\r\n        var k = new_index - arr.length + 1;\r\n        while (k--) {\r\n            arr.push(undefined);\r\n        }\r\n    }\r\n    arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\r\n}","import React, { Component } from 'react';\r\nimport \t     Slider         from '../Slider/Slider';\r\nimport      playIcon        from \"../../img/icons/play.svg\";\r\nimport      pauseIcon       from \"../../img/icons/pause.svg\";\r\nimport      volumeIcon      from \"../../img/icons/volume.svg\";\r\n\r\n\r\nexport default class Player extends Component {\r\n\t//Constructor\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tinfo:         this.props.info,\r\n\t\t\tplaying:      false,\r\n\t\t\tcurrent_time: this.props.info.current_time || 0,\r\n\t\t\tvolume:       this.props.volume || 1\r\n\t\t};\r\n\r\n\t\tthis.audio                    = new Audio();\r\n\t\tthis.audio.volume             = this.props.volume || 1;\r\n\t\tthis.togglePlay               = this.togglePlay.bind(this);\r\n\t\tthis.progressUpdate           = this.progressUpdate.bind(this);\r\n\t\tthis.recieveTimeFromSlider    = this.recieveTimeFromSlider.bind(this);\r\n\t\tthis.recieveVolumeFromSlider  = this.recieveVolumeFromSlider.bind(this);\r\n\t\tthis.updateActivePodcastState = this.props.updateActivePodcastState;\r\n\t\tthis.audio.addEventListener('timeupdate', this.progressUpdate);\r\n\t}\r\n\r\n\r\n\t//Recieving new props\r\n\tcomponentWillReceiveProps(props) {\r\n\t\t// console.log(props.info !== this.props.info);\r\n        if (props.info !== this.props.info) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tinfo: props.info\r\n\t\t\t}, () => {\r\n\t\t\t\tif(this.state.info.audio !== this.audio.src) {\r\n\t\t\t\t\tthis.audio.pause();\r\n\t\t\t\t\tthis.audio.src         = this.state.info.audio;\r\n\t\t\t\t\tthis.audio.currentTime = this.state.info.current_time || 0;\r\n\t\t\t\t\tif (this.state.playing) this.audio.play();\r\n\t\t\t\t}\r\n\t\t\t});\r\n        }\r\n    }\r\n\r\n\r\n\t//Toggle audio playback\r\n\ttogglePlay() {\r\n\t\tthis.setState({playing: !this.state.playing},\r\n\t\t\t() => {\r\n\t\t\t\tif (this.state.playing) {\r\n\t\t\t\t\tthis.audio.play();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.audio.pause();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\r\n\t//Updating slider progress\r\n\tprogressUpdate() {\r\n\t\tthis.setState(prevState => ({\r\n\t\t\tcurrent_time: this.audio.currentTime,\r\n\t\t\tinfo: {\r\n\t\t\t\t...prevState.info,\r\n\t\t\t\tcurrent_time: this.audio.currentTime\r\n\t\t\t}\r\n\t\t}),() => { \r\n\t\t\tif(this.state.playing) this.updateActivePodcastState(this.state.info);\r\n\t\t})\r\n\t}\r\n\r\n\r\n\t//Time slider callback\r\n\trecieveTimeFromSlider(time) {\r\n\t\tthis.audio.currentTime = time;\r\n\t\tthis.setState({current_time: time});\r\n\t}\r\n\r\n\r\n\t//Time slider callback\r\n\trecieveVolumeFromSlider(volume) {\r\n\t\tthis.audio.volume = volume;\r\n\t\tthis.setState({volume: volume});\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={`player${this.state.playing ? ' player_playing' : ''}`} id=\"player\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"player__wrap\">\r\n\r\n\r\n\t\t\t\t\t\t<div className=\"player__cover\">\r\n\t\t\t\t\t\t\t<img \r\n\t\t\t\t\t\t\t\tsrc={this.state.info.cover} \r\n\t\t\t\t\t\t\t\talt=\"podcast cover\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<h3 className=\"player__title roboto small-font\">\r\n\t\t\t\t\t\t\t\t<p>{this.state.info.title}</p>\r\n\t\t\t\t\t\t\t\t<p>{this.state.info.date}</p>\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t<div className=\"player__controls\">\r\n\t\t\t\t\t\t\t<div className=\"player__row player__row_center\">\r\n\t\t\t\t\t\t\t\t<span className=\"player__playback\" onClick={this.togglePlay}>\r\n\t\t\t\t\t\t\t\t\t<img \r\n\t\t\t\t\t\t\t\t\t\tclassName=\"player__icon player__icon_play\" \r\n\t\t\t\t\t\t\t\t\t\tsrc={playIcon} \r\n\t\t\t\t\t\t\t\t\t\talt=\"play icon\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<img \r\n\t\t\t\t\t\t\t\t\t\tclassName=\"player__icon player__icon_pause\" \r\n\t\t\t\t\t\t\t\t\t\tsrc={pauseIcon} \r\n\t\t\t\t\t\t\t\t\t\talt=\"pause icon\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"player__time\">\r\n\t\t\t\t\t\t\t\t<Slider \r\n\t\t\t\t\t\t\t\t\ttype           = 'time' //'time' or 'volume'\r\n\t\t\t\t\t\t\t\t\tduration       = {this.state.info.duration}\r\n\t\t\t\t\t\t\t\t\tvalue          = {this.state.info.duration_sec}\r\n\t\t\t\t\t\t\t\t\tprogress       = {this.state.current_time}\r\n\t\t\t\t\t\t\t\t\tdrag_size      = {10}\r\n\t\t\t\t\t\t\t\t\tdirection      = 'horizontal'\r\n\t\t\t\t\t\t\t\t\tcallback       = {this.recieveTimeFromSlider}\r\n\t\t\t\t\t\t\t\t\tforce_update   = {false}\r\n\t\t\t\t\t\t\t\t\tautohide       = {false}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"player__volume\">\r\n\t\t\t\t\t\t\t\t<img \r\n\t\t\t\t\t\t\t\t\tsrc={volumeIcon} \r\n\t\t\t\t\t\t\t\t\tclassName=\"player__icon player__icon_volume\" \r\n\t\t\t\t\t\t\t\t\talt=\"volume icon\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Slider \r\n\t\t\t\t\t\t\t\t\ttype           = 'volume' //'time' or 'volume'\r\n\t\t\t\t\t\t\t\t\tduration       = {100}\r\n\t\t\t\t\t\t\t\t\tvalue          = {100}\r\n\t\t\t\t\t\t\t\t\tprogress       = {this.state.volume*100}\r\n\t\t\t\t\t\t\t\t\tdrag_size      = {10}\r\n\t\t\t\t\t\t\t\t\tdirection      = 'horizontal'\r\n\t\t\t\t\t\t\t\t\tcallback       = {this.recieveVolumeFromSlider}\r\n\t\t\t\t\t\t\t\t\tforce_update   = {true}\r\n\t\t\t\t\t\t\t\t\tautohide       = {true}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","import React, { Component } from 'react';\r\nimport     {xmlToJson}      from '../helpers';\r\nimport     {timeToSec}      from '../helpers';\r\nimport     {shiftItem}      from '../helpers';\r\nimport       Podcast        from '../Podcast/Podcast';\r\nimport       Player         from '../Player/Player';\r\nimport        logo          from '../../logo.svg';\r\n\r\n\r\nexport default class RadioWrap extends Component {\r\n    //Constructor\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            api_link:        this.props.apiLink,\r\n            podcasts:        [],\r\n            next_to_display: 0,\r\n            display_counter: this.props.displayCounter,\r\n            cache_counter:   this.props.cacheCounter,\r\n            active_podcast:  {},\r\n            latest_podcasts: []\r\n        };\r\n\r\n        this.parsePodcast          = this.parsePodcast.bind(this);\r\n        this.loadMore              = this.loadMore.bind(this);\r\n        this.setActivePodcast      = this.setActivePodcast.bind(this);\r\n        this.getActivePodcastState = this.getActivePodcastState.bind(this);\r\n        this.podcastsToRender      = this.podcastsToRender.bind(this);\r\n    }\r\n\r\n\r\n    //Loading and parsing XML\r\n    componentDidMount() {\r\n        fetch(this.state.api_link)\r\n            .then(response => response.text())\r\n            .then(text     => {\r\n                let podcasts = xmlToJson(new DOMParser().parseFromString(text, \"text/xml\")).rss.channel.item;\r\n                this.setState({podcasts: podcasts.map((podcast, index) => this.parsePodcast(podcast, index))});\r\n            });\r\n    }\r\n\r\n\r\n    //Creating podcast objects\r\n    parsePodcast(podcast, index) {\r\n        return {\r\n            index:          index,\r\n            title:          podcast.title['#text'].split(' - ')[0],\r\n            date:           podcast.title['#text'].split(' - ')[1],\r\n            description:    podcast.description['#text'],\r\n            duration:       podcast['itunes:duration']['#text'],\r\n            duration_sec:   timeToSec(podcast['itunes:duration']['#text']),\r\n            audio:          podcast.guid['#text'],\r\n            cover:          podcast.wideImage['#text'],\r\n            current_time:   0\r\n        }\r\n    }\r\n\r\n\r\n    //Changing amount of displaying podcasts\r\n    loadMore() {\r\n        this.setState({next_to_display: this.state.next_to_display + this.state.display_counter});\r\n    }\r\n\r\n\r\n    //Callback for Podcast component 'click' event\r\n    setActivePodcast(current_podcast) {\r\n        let latest = this.state.latest_podcasts,\r\n            cur    = current_podcast.current_podcast_info;\r\n\r\n        if (cur !== this.state.active_podcast) {\r\n            latest = this.state.latest_podcasts;\r\n            let duplicate = latest.indexOf(cur);\r\n            if (duplicate > 0) {\r\n                latest[duplicate].shown = false;\r\n                shiftItem(latest, duplicate, 0);\r\n            } else {\r\n                latest.unshift(cur);\r\n            }\r\n            if (latest.length > this.state.cache_counter) latest = latest.splice(0, this.state.cache_counter);\r\n        }\r\n\r\n        this.setState({\r\n            latest_podcasts: latest,\r\n            active_podcast:  cur || current_podcast,\r\n            activePodcast:   current_podcast.current_podcast_index\r\n        });\r\n    }\r\n\r\n\r\n    //Updating state of active podcast\r\n    getActivePodcastState(active_podcast) {\r\n        // console.log(active_podcast);\r\n        let updatedPodcasts = this.state.podcasts;\r\n        updatedPodcasts[active_podcast.index] = active_podcast;\r\n        let latest = this.state.latest_podcasts;\r\n        latest.map(pod => {\r\n            if (pod.index === active_podcast.index) {\r\n                latest[latest.indexOf(pod)] = active_podcast;\r\n            }\r\n        })\r\n        this.setState({\r\n            latest_podcasts: latest,\r\n            podcasts:        updatedPodcasts,\r\n            active_podcast:  active_podcast\r\n        })\r\n    }\r\n\r\n\r\n    //podcastsToRender\r\n    podcastsToRender(arr, slice_amount, recent) {\r\n        let podcasts = slice_amount ? arr.slice(0, slice_amount) : arr;\r\n        const is_recent = recent;\r\n        return podcasts = podcasts.map(\r\n            (podcast) => {\r\n                let active = podcast.index === this.state.active_podcast.index ? true : false;\r\n\r\n                return  <Podcast \r\n                            key               = {podcast.index}\r\n                            info              = {podcast}\r\n                            pushActivePodcast = {this.setActivePodcast}\r\n                            active            = {active}\r\n                            recent            = {is_recent}\r\n                        />\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    render() {\r\n        let amount_to_show            = this.state.next_to_display + this.state.display_counter;\r\n        let podcasts_to_render        = this.podcastsToRender(this.state.podcasts, amount_to_show, false);\r\n        let latest_podcasts_to_render = this.podcastsToRender(this.state.latest_podcasts, false, true);\r\n\r\n        return (\r\n            <div className=\"radio\" id=\"radio\">\r\n\r\n                <div className=\"radio__header\">\r\n                    <div className=\"container\">\r\n                        <div className=\"logo\" id=\"logo\">\r\n                            <a href=\"#1\" className=\"logo__link\">\r\n                                <img src={logo} className=\"logo__img\" alt=\"logo\"/>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"radio__player-wrap\">\r\n                    <Player \r\n                        info                     = {this.state.active_podcast}\r\n                        updateActivePodcastState = {this.getActivePodcastState}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"radio__recent\">\r\n                    <h2 className=\"radio__title alerta large-font\">Recent Played:</h2>\r\n                    <div className=\"radio__wrap radio__wrap_latest\">\r\n                        {latest_podcasts_to_render}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"radio__all\">\r\n                    <h2 className=\"radio__title alerta large-font\">Podcasts:</h2>\r\n                    <div className=\"radio__wrap\">\r\n                        {podcasts_to_render}\r\n                    </div>\r\n                </div>\r\n\r\n                <button className = \"load roboto\" id=\"load\"\r\n                        onClick   = {this.loadMore}\r\n                >\r\n                    Load more podcasts\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\nimport      RadioWrap       from './components/RadioWrap/RadioWrap';\nimport './App.sass'\n\nexport default class App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<RadioWrap \n\t\t\t\t\t\tapiLink=\"https://tools.planetradio.co.uk/core/podcasts/rss.php?name=radio-1-norge\"\n\t\t\t\t\t\tdisplayCounter={12}\n\t\t\t\t\t\tcacheCounter={5}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();"],"sourceRoot":""}